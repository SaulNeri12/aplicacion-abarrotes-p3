
package interfazUsuario;

import control.Control;
import excepciones.PersistenciaException;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import objetosNegocio.Usuario;
import plantillas.ValidacionesAbarrotes;

/**
 *
 * @author limon
 */
public class Login extends javax.swing.JDialog {

    public StringBuffer respuesta;
    public Usuario usuario;
    public Control control;
    
    /**
     * Creates new form Login
     * @param parent
     * @param modal
     * @param control
     */
    public Login(java.awt.Frame parent, boolean modal, Control control) {
        super(parent, modal);
        initComponents();
        this.centraCuadroDialogo(parent);
        setResizable(false);
        
        this.respuesta = new StringBuffer();
        this.usuario = new Usuario(0, "", "", "", "");
        this.control = control;
        
        // detecta cuando se cierra el dialogo al presionar X
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                respuesta.delete(0, respuesta.length());
                respuesta.append(ConstantesGUI.CANCELAR);
                //System.out.println(respuesta);
                System.exit(0);
            }
        });
        
        respuesta.delete(0, respuesta.length());
        respuesta.append("Aceptar");
        setVisible(true);
    }

    public void centraCuadroDialogo(java.awt.Frame parent) {
        //Obtiene el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Obtiene el tamaño de la ventana de la aplicación
        Dimension frameSize = getSize();

        // Se asegura que el tamaño de la ventana de la aplicación
        // no exceda el tamaño de la pantalla
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }

        // Centra la ventana de la aplicación sobre la pantalla
        setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUsuario = new javax.swing.JLabel();
        labelContraseña = new javax.swing.JLabel();
        botonIniciarSesion = new javax.swing.JButton();
        campoContrasenaUsuario = new javax.swing.JPasswordField();
        botonCancelar = new javax.swing.JButton();
        campoTextoIDUsuario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Iniciar Sesion");

        labelUsuario.setText("ID de usuario:");

        labelContraseña.setText("Contraseña:");

        botonIniciarSesion.setText("Iniciar Sesión");
        botonIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarSesionActionPerformed(evt);
            }
        });

        campoContrasenaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoContrasenaUsuarioActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        campoTextoIDUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoIDUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonIniciarSesion)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelContraseña)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campoContrasenaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoTextoIDUsuario)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(labelUsuario)
                                    .addGap(199, 199, 199))))
                        .addGap(9, 30, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(labelUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoTextoIDUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(labelContraseña)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoContrasenaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonIniciarSesion)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarSesionActionPerformed
        if (!ValidacionesAbarrotes.validarIDUsuario(campoTextoIDUsuario.getText())) {
           JOptionPane.showMessageDialog(
                this,
                "El formato del ID es incorrecto, ingresa un ID valido",
                "Identificador Erroneo",
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        String passwd = String.valueOf(campoContrasenaUsuario.getPassword());
        String contrasenaHash = "";
        
        if (!ValidacionesAbarrotes.validarContrasenaUsuario(passwd)) {
            JOptionPane.showMessageDialog(
                this,
                "El formato de la contrasena es incorrecto, ingresa una contrasena valida",
                "Contraseña Erronea",
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        
        try {
            //System.out.println(passwd);
            contrasenaHash = ValidacionesAbarrotes.hashearContrasena(passwd);
        } catch (NoSuchAlgorithmException ex) {
            JOptionPane.showMessageDialog(
                this,
                "La contrasena no debe contener espacios ni simbolos, ademas de ser de 8 a 30 caracteres maximo",
                "Contraseña Erronea",
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        int id = Integer.parseInt(campoTextoIDUsuario.getText());
        this.usuario.setId(id);
        this.usuario.setContrasena(contrasenaHash);
        
        Usuario encontrado;
        
        try {
            encontrado = control.iniciarSesion(null, usuario);
            this.usuario = encontrado;
        } catch (PersistenciaException ex) {
            JOptionPane.showMessageDialog(
                this,
                ex.getMessage(),
                "Iniciar Sesion",
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        respuesta.delete(0, respuesta.length());
        respuesta.append("Aceptar");
        
        setVisible(false);
    }//GEN-LAST:event_botonIniciarSesionActionPerformed

    private void campoContrasenaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoContrasenaUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoContrasenaUsuarioActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        respuesta.delete(0, respuesta.length());
        respuesta.append(ConstantesGUI.CANCELAR);
        System.exit(0);
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void campoTextoIDUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoIDUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoIDUsuarioActionPerformed

    
    /*
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Login dialog = new Login(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonIniciarSesion;
    private javax.swing.JPasswordField campoContrasenaUsuario;
    private javax.swing.JTextField campoTextoIDUsuario;
    private javax.swing.JLabel labelContraseña;
    private javax.swing.JLabel labelUsuario;
    // End of variables declaration//GEN-END:variables
}
